---
import { Image } from 'astro:assets';

import {
  MOVIE_LIST_NOW_PLAYING,
  MOVIE_LIST_POPULAR,
  MOVIE_LIST_TRENDING,
  MOVIE_LIST_UPCOMING,
} from '$lib/constants/internal-urls';
import ArrowLeft from '$lib/icons/arrow-left.svelte';
import GithubIcon from '$lib/images/github-icon.png';

// import SearchBox from './components/search-box/search-box.svelte';
import BackButton from './components/back-button.svelte';
import SearchSummary from './components/search-summary.astro';

type Variant = 'home' | 'detail' | 'filter-result-list';

interface Props {
  title?: string;
  totalSearchResult?: number;
  variant?: Variant;
}

const {
  title = 'Explore Movies',
  totalSearchResult = 0,
  variant = 'home',
} = Astro.props;

const isHome = variant === 'home';

const backDestinationsMapping: Record<Variant, string[]> = {
  detail: [
    '/',
    MOVIE_LIST_TRENDING,
    MOVIE_LIST_NOW_PLAYING,
    MOVIE_LIST_UPCOMING,
    MOVIE_LIST_POPULAR,
  ],
  'filter-result-list': ['/'],
  home: [],
};

const backDestinations = backDestinationsMapping[variant];
---

<div class='header-container'>
  <header
    data-search-box-shown='false'
    class={isHome ? '' : 'header_with-back-btn'}
  >
    <div class='header__inner'>
      <nav>
        {
          isHome ? (
            <a
              href={import.meta.env.REPOSITORY_URL}
              target='_blank'
              title='Repository'
            >
              <Image
                alt='GitHub Icon'
                loading='eager'
                src={GithubIcon}
                width={96}
                height={96}
              />
              <span class='visually-hidden'>Repository</span>
            </a>
          ) : (
            <BackButton {backDestinations} client:load>
              <ArrowLeft size={48} />
              <span class='visually-hidden'>Back</span>
            </BackButton>
          )
        }
      </nav>

      <div class='search-container'>
        {
          totalSearchResult > 0 ? (
            <SearchSummary {totalSearchResult} />
          ) : (
            <h1 class='font-bold line-clamp-2'>{title}</h1>
          )
        }
      </div>
    </div>
  </header>
</div>

<style lang='scss'>
  .header-container {
    --header-height: 84px;

    width: 100%;
    margin-top: var(--header-height);
  }

  header {
    position: fixed;
    top: 0;
    left: 0;
    z-index: var(--z-index-app-bar);
    width: 100%;
    height: var(--header-height);
    background-color: var(--color-neutral-00);
    box-shadow: var(--shadow-high);
    transition-property: width, padding;
    transition-duration: 300ms;
    transition-timing-function: ease-in;
  }

  .header__inner {
    display: flex;
    gap: 4px;
    align-items: center;
    justify-content: space-between;
    width: 100%;
    max-width: var(--screen-size-xl);
    height: var(--header-height);
    padding: 0 var(--left-right-gutter);
    margin: 0 auto;
    transition: inherit;
  }

  nav {
    --size: 32px;
    width: var(--size);
    height: var(--size);
    transition: inherit;

    :global(svg) {
      width: 100%;
      height: 100%;
    }
  }

  .header_with-back-btn nav {
    position: absolute;
    top: 50%;
    left: 4px;
    transform: translateY(-50%);
  }

  a {
    display: block;
  }

  a :global(img) {
    width: 100%;
    height: 100%;
    border-radius: 50%;
  }

  .search-container {
    display: flex;
    flex: 1;
    align-items: center;
    justify-content: center;
    transition: inherit;

    h1 {
      text-align: center;
      font-size: 18px;
    }
  }

  @include search-box-shown {
    nav {
      --size: 0px;
    }
  }

  @include md {
    .search-container {
      h1 {
        font-size: 20px;
      }
    }
  }

  @include lg {
    .header-container {
      --header-height: 96px;
    }

    nav {
      --size: 48px;
    }

    .search-container {
      h1 {
        font-size: 24px;
      }
    }

    @include search-box-shown {
      nav {
        --size: 48px;
      }
    }
  }
</style>

<script>
  import { isSearchBoxShown } from '$lib/stores/search';

  const header = document.querySelector(
    'div.header-container > header',
  );

  isSearchBoxShown.subscribe(isShown => {
    header?.setAttribute('data-search-box-shown', `${isShown}`);
  });
</script>
